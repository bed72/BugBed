plugins {
    id 'com.android.application'
    id 'com.apollographql.apollo3'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.bed.bugbed"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'BASE_URL', '"https://graphql-pokeapi.graphcdn.app/"'
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

    apollo {
        packageName.set 'com.bed.bugbed'
    }
    namespace 'com.bed.bugbed'
}

dependencies {
    implementation 'androidx.work:work-runtime:2.7.1'

    // Material design
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.7.0'

    // AndroidX
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Logger Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Apollo GraphQL
    implementation "com.apollographql.apollo3:apollo-api:$apollo_version"
    implementation "com.apollographql.apollo3:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo3:apollo-normalized-cache-sqlite:$apollo_version"

    // Kotlin Serializer
//    def serialization_version = '1.3.0'
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

    // CoilGlide
    implementation 'io.coil-kt:coil:2.2.1'

    // ViewModel and LiveData
    def lifecycle_version = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Ktor
//    def ktor_version = '1.6.3'
//    implementation "io.ktor:ktor-client-cio:$ktor_version"
//    // implementation "io.ktor:ktor-client-mock:$ktor_version"
//    implementation "io.ktor:ktor-client-core:$ktor_version"
//    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
//    implementation "io.ktor:ktor-client-android:$ktor_version"
//    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
//    implementation "io.ktor:ktor-client-serialization:$ktor_version"

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}